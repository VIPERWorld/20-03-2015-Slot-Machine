/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Controllers.Score;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.Observable;
import java.util.Observer;
import javax.swing.AbstractButton;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JToggleButton;
import javax.swing.Timer;
import slotmachine.SlotManager;

/**
 *
 * @author Loek
 */
@SuppressWarnings("serial")
public class SlotGUI extends javax.swing.JFrame implements Observer {
    
    private final SlotManager slotManager;
    private Timer stopwatch;
    private Score money;

    /**
     * Creates new form SlotGUI
     *
     * @param sm
     */
    public SlotGUI(SlotManager sm) {
        //this.setLocationRelativeTo(null);
        this.money = new Score();
        this.initComponents();
        this.setFocusable(true);
        this.slot1.setIcon(sm.getSlot1().getIcon());
        this.slot2.setIcon(sm.getSlot2().getIcon());
        this.slot3.setIcon(sm.getSlot3().getIcon());

        slotManager = sm;
        this.playButton.addActionListener((ActionEvent e) -> {
            playButton.setEnabled(false);
        });
    }

    /**
     *
     * @return the play button.
     */
    public JButton getPlayButton() {
        return playButton;
       
    }

    /**
     * Simulates a click on a button.
     *
     * @param button to be clicked
     */
    public void click(AbstractButton button) {
        button.doClick();
    }

    /**
     *
     * @return slot1 hold button
     */
    public JToggleButton getSlot1Hold() {
        return slot1Hold;
    }

    /**
     *
     * @return slot2 hold button.
     */
    public JToggleButton getSlot2Hold() {
        return slot2Hold;
    }

    /**
     *
     * @return slot3 hold button.
     */
    public JToggleButton getSlot3Hold() {
        return slot3Hold;
    }

    @Override
    public void update(Observable o, Object arg) {
        SlotManager sm = (SlotManager) o;
        this.slot1.setIcon(sm.getSlot1().getIcon());
        this.slot2.setIcon(sm.getSlot2().getIcon());
        this.slot3.setIcon(sm.getSlot3().getIcon());
    }

    public void subtractPoints() {
        this.changeMoney("-1.00");
    }

    public void addPointsTwoInARow() {
        this.changeMoney("5.00");
    }

    public void addPointsThreeInARow() {
        this.changeMoney("10.00");
    }
    
    private void changeMoney(String string){
        money.changeMoney(string);
        this.scoreLabel.setText(money.toString());
    }

    public void finishedPlaying() {
        this.playButton.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "deprecation"})
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        slot1Hold = new javax.swing.JToggleButton();
        slot2Hold = new javax.swing.JToggleButton();
        slot3Hold = new javax.swing.JToggleButton();
        playButton = new javax.swing.JButton();
        slot3 = new javax.swing.JLabel();
        slot1 = new javax.swing.JLabel();
        slot2 = new javax.swing.JLabel();
        scoreLabel = new javax.swing.JLabel();
        currencyLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Slot Machines");
        setBackground(new java.awt.Color(255, 102, 102));
        setForeground(java.awt.Color.black);
        setPreferredSize(new java.awt.Dimension(900, 500));
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        slot1Hold.setLabel("Hold");
        slot1Hold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot1HoldActionPerformed(evt);
            }
        });

        slot2Hold.setLabel("Hold");
        slot2Hold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot2HoldActionPerformed(evt);
            }
        });

        slot3Hold.setActionCommand("Hold");
        slot3Hold.setLabel("Hold");
        slot3Hold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slot3HoldActionPerformed(evt);
            }
        });

        playButton.setLabel("Play");
        playButton.setPreferredSize(new java.awt.Dimension(50, 20));
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        slot3.setText("jLabel2");

        slot1.setText("slot1");

        slot2.setText("jLabel2");

        scoreLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        scoreLabel.setText("jLabel1");
        this.scoreLabel.setText(this.money.toString());
        scoreLabel.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                scoreLabelPropertyChange(evt);
            }
        });

        currencyLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        currencyLabel.setText("â‚¬");
        currencyLabel.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                currencyLabelPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(slot1Hold, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(130, 130, 130)
                                .addComponent(slot2Hold, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(139, 139, 139)
                                .addComponent(slot3Hold, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(slot1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100)
                                .addComponent(slot2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100)
                                .addComponent(slot3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(724, 724, 724)
                        .addComponent(scoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(currencyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currencyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(slot3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slot1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(slot2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(slot3Hold)
                    .addComponent(slot2Hold)
                    .addComponent(slot1Hold))
                .addGap(55, 55, 55)
                .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
        );

        slot1Hold.getAccessibleContext().setAccessibleName("slot1Hold");
        slot2Hold.getAccessibleContext().setAccessibleName("slot2Hold");
        slot3Hold.getAccessibleContext().setAccessibleName("slot3Hold");
        playButton.getAccessibleContext().setAccessibleName("playButton");
        playButton.getAccessibleContext().setAccessibleDescription("");
        scoreLabel.getAccessibleContext().setAccessibleName("scoreLabel");
        scoreLabel.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed

        this.slotManager.spin();
        this.slot1.setIcon(slotManager.getSlot1().getIcon());
        this.slot2.setIcon(slotManager.getSlot2().getIcon());
        this.slot3.setIcon(slotManager.getSlot3().getIcon()); 

    }//GEN-LAST:event_playButtonActionPerformed

    private void slot1HoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot1HoldActionPerformed
        if (slotManager.getSlot1().isHold()) {
            slotManager.getSlot1().setHold(false);
            return;
        }
        slotManager.getSlot1().setHold(true);
    }//GEN-LAST:event_slot1HoldActionPerformed

    private void slot2HoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot2HoldActionPerformed
        if (slotManager.getSlot2().isHold()) {
            slotManager.getSlot2().setHold(false);
            return;
        }
        slotManager.getSlot2().setHold(true);
    }//GEN-LAST:event_slot2HoldActionPerformed

    private void slot3HoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slot3HoldActionPerformed
        if (slotManager.getSlot3().isHold()) {
            slotManager.getSlot3().setHold(false);
            return;
        }
        slotManager.getSlot3().setHold(true);
    }//GEN-LAST:event_slot3HoldActionPerformed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_1:
                click(slot1Hold);
                return;
            case KeyEvent.VK_2:
                click(slot2Hold);
                return;
            case KeyEvent.VK_3:
                click(slot3Hold);
                return;
            case KeyEvent.VK_ENTER:
                click(playButton);
        }
    }//GEN-LAST:event_formKeyReleased

    private void scoreLabelPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_scoreLabelPropertyChange
//        if(!this.money.hasMoney()){
//            this.playButton.setEnabled(false);
//        }else{
//            this.playButton.setEnabled(true);
//        }
    }//GEN-LAST:event_scoreLabelPropertyChange

    private void currencyLabelPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_currencyLabelPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_currencyLabelPropertyChange

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel currencyLabel;
    private javax.swing.JButton playButton;
    private javax.swing.JLabel scoreLabel;
    private javax.swing.JLabel slot1;
    private javax.swing.JToggleButton slot1Hold;
    private javax.swing.JLabel slot2;
    private javax.swing.JToggleButton slot2Hold;
    private javax.swing.JLabel slot3;
    private javax.swing.JToggleButton slot3Hold;
    // End of variables declaration//GEN-END:variables

}
